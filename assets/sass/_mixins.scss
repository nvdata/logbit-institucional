
@mixin inset {
    left: 0;
    right: 0;
    bottom: 0;
    top :0;
}

@mixin tituloGrande {
    color: $secundaria;
    font-size: clamp(42px, 7vw, 84px);
    text-align: center;
    margin: 40px auto;
}

@mixin subtitulo($alinhamento:center) {
    color: $terciaria;
    text-align: $alinhamento;
    line-height: 160%;

    @include d(s) {
        font-size: 14px;
    }
}

@mixin botao($bg:white, $color:$secundaria) {
    border-radius: 30px;
    padding: 15px 40px;
    text-align: center;
    display: inline-flex;
    background-color: $bg;
    color: $color;
    cursor: pointer;
    transition: 0.3s ease;
    font-weight: 700;
    position: relative;
    overflow: hidden;

    span {
        background: $secundaria;
        position: absolute;
        transform-origin: center center;
        @include size(100px);
        border-radius: 50%;
        animation: animate 1s linear forwards;
        pointer-events: none;

        z-index: 10;

    }
}


@mixin sombra {
    box-shadow: 0 30px 30px -40px rgb(0 0 0 / 64%);
}




// ===================================================



//background
@mixin bg-props-contain {
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
}

@mixin bg-props-cover {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;

}

// Sizing
// ------
@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

// Normal & hover state
// --------------------
@mixin hoverer($property, $normal, $hovered) {

    transition: 0.4s ease;

    #{$property}: $normal;

    &:hover {
        #{$property}: $hovered;
    }
}


@mixin data__logo {
    display: flex;
    width: 100%;
    justify-content: flex-end;
    padding: 5px 10px;

    img {
        width: 130px;
    }
}
@mixin pseudo($p:initial) {
    content: "";
    display: block;
    @include bg-props-contain;
    position: $p;
    pointer-events: none;

}

@mixin clamp($property, $min-size, $scaler, $max-size, $min-size-left:false, $scaler-left:false, $max-size-left:false){
    @if $min-size-left == false {
      #{$property}:$max-size; 
      #{$property}:#{"min(max(#{$min-size}, #{$scaler}), #{$max-size})"}; 
      #{$property}:clamp(#{$min-size},#{$scaler}, #{$max-size});
     
    } @else if $min-size-left == 0 or $min-size-left == auto{
      #{$property}:$max-size $min-size-left; 
      #{$property}:#{"min(max(#{$min-size}, #{$scaler}), #{$max-size})"} $min-size-left;
      #{$property}:clamp($min-size, $scaler, $max-size) $min-size-left;
    } @else {
      #{$property}:$max-size $min-size-left; 
      #{$property}:#{"min(max(#{$min-size}, #{$scaler}), #{$max-size})"} #{"min(max(#{$min-size-left}, #{$scaler-left}), #{$max-size-left})"}; 
      #{$property}:clamp($min-size, $scaler, $max-size) clamp($min-size-left, $scaler-left, $max-size-left);
    }
  }

  